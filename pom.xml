<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.thymoljs</groupId>
	<artifactId>thymol</artifactId>
	<version>2.0.1-pre.7</version>

	<name>Thymol Project</name>
	<description>Javascript Thymeleaf Emulation</description>
	<packaging>war</packaging>
	<url>http://www.thymoljs.org/</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!---->
		<java-version>1.8</java-version>
		<servlet-api-version>2.5</servlet-api-version>
		<thymeleaf-version>2.1.5.RELEASE</thymeleaf-version>
		<json-io-version>4.8.0</json-io-version>
		<icu4j-version>58.1</icu4j-version>
		<javagalician-version>1.1</javagalician-version>
		<slf4j-version>1.7.21</slf4j-version>
		<junit-version>4.12</junit-version>
		<selenium-java-version>3.0.1</selenium-java-version>
		<!--jetty-version>9.3.13.v20161014</jetty-version-->
		<jetty-version>9.2.15.v20160210</jetty-version>
		<!---->
		<maven-clean-plugin-version>3.0.0</maven-clean-plugin-version>
		<maven-compiler-plugin-version>3.5.1</maven-compiler-plugin-version>
		<maven-war-plugin-version>3.0.0</maven-war-plugin-version>
		<maven-surefire-plugin-version>3.0.0-M4</maven-surefire-plugin-version>
		<maven-failsafe-plugin-version>3.0.0-M4</maven-failsafe-plugin-version>						
		<maven-resources-plugin-version>3.0.1</maven-resources-plugin-version>
		<maven-dependency-plugin-version>2.10</maven-dependency-plugin-version>
		<!---->
		<grunt-maven-plugin-version>1.5.1</grunt-maven-plugin-version>
		<m2e-lifecycle-mapping-version>1.0.0</m2e-lifecycle-mapping-version>
		<!---->
		<webdriver.chrome.driver>${env.CHROME_DRIVER}</webdriver.chrome.driver>
		<webdriver.gecko.driver>${env.GECKO_DRIVER}</webdriver.gecko.driver>
		<!---->
		<filtering-value>true</filtering-value>
		<debug-args></debug-args>
		<theWarName>${project.artifactId}-${project.version}</theWarName>
		<!---->
		<thThymolPath>${project.basedir}/bower_components/thymol/dist/</thThymolPath>
		<thThymolSource>thymol-full.js</thThymolSource>
		<thDeploy>${project.build.directory}/test-classes</thDeploy>
		<thThymolPrelude>Date.prototype.toString=Date.prototype.toUTCString;</thThymolPrelude>
		<!--
		  Edit the thThymolNodeServer property if you want to run Thymol node server at a different location
		-->
		<thThymolNodeServer>../thymol-node-server/bin/thymol-server</thThymolNodeServer>
		<!---->
		<thReleaseDate>not yet!</thReleaseDate>
		<!---->
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf-version}</version>
		</dependency>

		<dependency>
			<groupId>com.cedarsoftware</groupId>
			<artifactId>json-io</artifactId>
			<version>${json-io-version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-java-version}</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<version>2.23.1</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>3.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- Find this at https://github.com/downloads/javagalician/javagalician.github.com/javagalician-1.1-dist.zip -->
			<groupId>org.javagalician</groupId>
			<artifactId>javagalician-java6</artifactId>
			<version>${javagalician-version}</version>
		</dependency>

		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>${icu4j-version}</version>
		</dependency>

		<dependency>
			<!-- Find this at http://apps.icu-project.org/icu-jsp/downloadPage.jsp?ver=53.1&base=j&svn=release-53-1 -->
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j-localespi</artifactId>
			<version>${icu4j-version}</version>
		</dependency>

	</dependencies>

	<profiles>

		<profile>
			<id>phantomjs</id>
			<properties>
				<webDriver>phantomjs</webDriver>
			</properties>
		</profile>

		<profile>
			<id>htmlunit</id>
			<properties>
				<webDriver>htmlunit</webDriver>
			</properties>
		</profile>

		<profile>
			<id>firefox</id>
			<properties>
				<webDriver>firefox</webDriver>
			</properties>
		</profile>

		<profile>
			<id>chrome</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<webDriver>chrome</webDriver>
			</properties>
		</profile>

		<profile>
			<id>explorer</id>
			<properties>
				<webDriver>internetExplorer</webDriver>
			</properties>
		</profile>

		<profile>
			<id>debug</id>
			<properties>
				<debug-args>-Xdebug -Xrunjdwp:transport=dt_socket,address=8888,server=y,suspend=y</debug-args>
			</properties>
		</profile>



		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
 				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin-version}</version>
						<configuration>
							<includes>
								<include>**/RunSureFire.java</include>
							</includes>
							<systemPropertyVariables>
								<webDriver>${webDriver}</webDriver>
								<JAVA_TOOL_OPTIONS>-Dfile.encoding=UTF-8</JAVA_TOOL_OPTIONS>
								<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
								<webdriver.gecko.driver>${webdriver.gecko.driver}</webdriver.gecko.driver>
							</systemPropertyVariables>
							<properties>
								<thThymolPrelude>Date.prototype.toString=Date.prototype.toUTCString;</thThymolPrelude>
							</properties>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>default-cli</id>
								<configuration>
									<target>
										<exec executable="forever" spawn="false">
											<arg value="start" />
											<arg value="-l" />
											<arg value="${project.basedir}/forever.log" />
											<arg value="-o" />
											<arg value="out.log" />
											<arg value="-e" />
											<arg value="err.log" />
											<arg value="--minUptime" />
											<arg value="30000" />
											<arg value="--spinSleepTime" />
											<arg value="15000" />
											<arg value="${thThymolNodeServer}" />
											<arg value="-c" />
											<arg value="${project.basedir}/src/build/server-config" />
											<arg value="${project.build.directory}/${theWarName}/WEB-INF/templates" />
											<arg value="" />
											<arg value="${project.basedir}/dist/thymol-node" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>start-third-parties</id>
								<phase>pre-integration-test</phase>
								<configuration>
									<target>
										<exec executable="forever" spawn="false">
											<arg value="start" />
											<arg value="--minUptime" />
											<arg value="30000" />
											<arg value="--spinSleepTime" />
											<arg value="15000" />
											<arg value="${thThymolNodeServer}" />
											<arg value="-c" />
											<arg value="${project.basedir}/src/build/server-config" />
											<arg value="${project.build.directory}/${theWarName}/WEB-INF/templates" />
											<arg value="" />
											<arg value="${project.basedir}/dist/thymol-node" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-third-parties</id>
								<phase>post-integration-test</phase>
								<configuration>
									<target>
										<exec executable="forever" spawn="false">
											<arg value="stop" />
											<arg value="0" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<includes>
										<include>**/RunFailSafeNode.java</include>
									</includes>
									<excludes>
										<exclude>**/RunFailSafe.java</exclude>
									</excludes>									
								</configuration>
								<id>integration-test-node</id>
								<goals>
									<goal>integration-test</goal>
              								<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>validate-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>${jetty-version}</version>
						<configuration>
							<stopPort>8005</stopPort>
							<stopKey>STOP</stopKey>
							<contextPath>/</contextPath>
						</configuration>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run-forked</goal>
								</goals>
								<configuration>
									<waitForChild>false</waitForChild>
									<jvmArgs>-Dfile.encoding=UTF-8 -Djava.ext.dirs=${project.build.directory}/lib ${debug-args}</jvmArgs>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<includes>
										<include>**/RunFailSafe.java</include>
									</includes>
									<excludes>
										<exclude>**/RunFailSafeNode.java</exclude>
									</excludes>
								</configuration>
								<id>integration-test-jetty</id>
								<goals>
									<goal>integration-test</goal>
              								<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>

	</profiles>

	<build>

		<finalName>${theWarName}</finalName>
		<filters>
			<filter>${project.basedir}/src/build/test.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/webapp/WEB-INF/templates</directory>
				<targetPath>${thDeploy}/templates</targetPath>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${m2e-lifecycle-mapping-version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>pl.allegro</groupId>
										<artifactId>grunt-maven-plugin</artifactId>
										<versionRange>[0.0.0,)</versionRange>
										<goals>
											<goal>npm</goal>
											<goal>bower</goal>
											<goal>grunt</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin-version}</version>
					<configuration>
						<systemPropertyVariables>
							<webDriver>${webDriver}</webDriver>
							<JAVA_TOOL_OPTIONS>-Dfile.encoding=UTF-8 -DthDeploy=${thDeploy}</JAVA_TOOL_OPTIONS>
							<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
							<webdriver.gecko.driver>${webdriver.gecko.driver}</webdriver.gecko.driver>
						</systemPropertyVariables>
						<argLine>-Dfile.encoding=UTF-8 -DthDeploy=${thDeploy}</argLine>
						<additionalClasspathElements>
							<additionalClasspathElement>${project.build.directory}/lib/icu4j-58.1.jar</additionalClasspathElement>
							<additionalClasspathElement>${project.build.directory}/lib/icu4j-localespi-58.1.jar</additionalClasspathElement>
							<additionalClasspathElement>${project.build.directory}/lib/javagalician-java6-1.1.jar</additionalClasspathElement>																					
						</additionalClasspathElements>
						<properties>
							<thThymolPrelude></thThymolPrelude>
						</properties>
					</configuration>

				</plugin>

			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>src/build/build.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin-version}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>dist</directory>
						</fileset>
						<fileset>
							<directory>sourceforge</directory>
						</fileset>
						<fileset>
							<directory>jsdelivr</directory>
						</fileset>
						<fileset>
							<directory>npm</directory>
						</fileset>
						<fileset>
							<directory>${project.basedir}</directory>
							<includes>
								<include>bower.json</include>
								<include>maven-properties.json</include>
								<include>package.json</include>
								<include>npm/package.json</include>
								<include>forever.log</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin-version}</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin-version}</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.ibm.icu</groupId>
									<artifactId>icu4j</artifactId>
									<version>${icu4j-version}</version>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.ibm.icu</groupId>
									<artifactId>icu4j-localespi</artifactId>
									<version>${icu4j-version}</version>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.javagalician</groupId>
									<artifactId>javagalician-java6</artifactId>
									<version>${javagalician-version}</version>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>pl.allegro</groupId>
				<artifactId>grunt-maven-plugin</artifactId>
				<version>${grunt-maven-plugin-version}</version>
				<configuration>
					<gruntBuildDirectory>${project.basedir}</gruntBuildDirectory>
					<gruntOptions>
						<gruntOption>--verbose</gruntOption>
					</gruntOptions>
					<filteredResources>
						<filteredResource>src/build/maven-properties.json</filteredResource>
					</filteredResources>
					<filteredResources>
						<filteredResource>src/build/package.json</filteredResource>
					</filteredResources>
				</configuration>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>npm</goal>
							<goal>bower</goal>
							<goal>grunt</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin-version}</version>
				<configuration>
					<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin-version}</version>
				<executions>
					<execution>
						<id>copy-libs</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<resources>
								<resource>
									<directory>lib</directory>
									<includes>
										<include>*.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-build-files</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}</outputDirectory>
							<resources>
								<resource>
									<directory>src/build</directory>
									<filtering>true</filtering>
									<includes>
										<include>*.json</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources1</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/sourceforge/Webcontent</outputDirectory>
							<resources>
								<resource>
									<directory>src/doc/Sourceforge/attachments</directory>
									<includes>
										<include>README.txt</include>
										<include>CONFIGURATION-README.txt</include>
									</includes>
								</resource>
								<resource>
									<directory>src/doc/WebContent</directory>
									<includes>
										<include>README.txt</include>
										<include>LICENSE-2.0.txt</include>
										<include>images/**/*.*</include>
										<include>css/**/*.*</include>
										<include>js/**/*.*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources3</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/sourceforge/Webcontent/examples</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/webapp/WEB-INF</directory>
									<filtering>${filtering-value}</filtering>
									<includes>
										<include>templates/thattrs/**/*.*</include>
										<include>templates/v21/**/*.*</include>
										<include>templates/thymol/2.0/**/*.*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources3a</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/sourceforge/Webcontent/examples/templates/issue-245</outputDirectory>
							<filters>
								<filter>${project.basedir}/src/build/level4.properties</filter>
							</filters>
							<resources>
								<resource>
									<directory>src/main/webapp/WEB-INF/templates/tests21/syntax</directory>
									<filtering>${filtering-value}</filtering>
									<includes>
										<include>index.html</include>
										<include>issue*.html</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources3b</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/sourceforge/Webcontent/examples</outputDirectory>
							<filters>
								<filter>${project.basedir}/src/build/level3.properties</filter>
							</filters>
							<resources>
								<resource>
									<directory>src/main/webapp/WEB-INF/templates</directory>
									<filtering>${filtering-value}</filtering>
									<includes>
										<include>expr/**/*.*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources4</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/sourceforge/Webcontent/examples</outputDirectory>
							<resources>
								<resource>
									<directory>src/doc/WebContent/examples/thymol-example</directory>
									<filtering>${filtering-value}</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
